{"version":3,"sources":["App.js","endpoints.js","reportWebVitals.js","index.js"],"names":["App","useState","id","message","data","setData","className","align","onClick","axios","post","query","then","response","info","test","catch","error","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAoDeA,MA/Cf,WACE,MAAwBC,mBAAS,CAACC,GAAI,KAAMC,QAAS,eAArD,mBAAOC,EAAP,KAAaC,EAAb,KAsBA,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,8BACgB,OAAZF,EAAKF,IACJ,kCACC,+BACE,oBAAIK,MAAM,QAAV,kBACA,oBAAIA,MAAM,OAAV,SAAkBH,EAAKF,QAEzB,+BACE,oBAAIK,MAAM,QAAV,sBACA,6BAAKH,EAAKD,kBAMlB,wBAAQK,QAAS,WArCrBC,IAAMC,KCRa,oCDQC,CAClBC,MAAM,mIASPC,MAAM,SAAAC,GACL,IAAMC,EAAOD,EAAST,KAAKA,KAAKW,KAAK,IAAM,CAAEb,GAAI,EAAGC,QAAS,SAC7DE,EAAQS,MAETE,OAAM,SAAAC,GACLC,QAAQC,IAAI,YAAaF,OAsBvB,+BElCOG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.88f2f873.chunk.js","sourcesContent":["import './App.css';\nimport axios from \"axios\";\nimport { graphQL } from './endpoints';\nimport { useState } from \"react\";\n\nfunction App() {\n  const [data, setData] = useState({id: null, message: \"Loading...\"})\n\n  const getMessage = () => {\n    axios.post(graphQL, {\n      query: `query getMessages {\n        test {\n          id\n          message\n          fecha_creacion\n        }\n      }    \n      `\n    })\n    .then (response => {          \n      const info = response.data.data.test[0] || { id: 1, message: \"Error\" }\n      setData(info)      \n    })\n    .catch(error=> {\n      console.log(\"ERROR => \", error)\n    })\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div>          \n          {(data.id !== null) &&\n            (<table>\n              <tr>\n                <th align=\"right\">ID: </th>\n                <td align=\"left\">{data.id}</td>\n              </tr>\n              <tr>\n                <th align=\"right\">Message:</th>\n                <td>{data.message}</td>\n              </tr>\n            </table>\n            )           \n          }          \n        </div>\n        <button onClick={()=>getMessage()}> Consultar </button>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","\nexport const graphQL = \"http://localhost:60004/v1/graphql\"\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}